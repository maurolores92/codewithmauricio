---
import Layout from "../../layouts/Layout.astro";
import { getBlogPostById, client } from '@utils/fetchBlogPostById';
import type { BlogPost } from '@utils/types';
import BlogDetail from '@modules/BlogDetail';

const slug = Astro.params.slug as string;
const entries = await client.getEntries({
  content_type: 'blogPost',
  'fields.slug': slug,
  include: 10,
});

if (entries.items.length === 0) {
  throw new Error(`Post not found for slug: ${slug}`);
}

const entryId = entries.items[0].sys.id;
const post = await getBlogPostById(entryId) as unknown as BlogPost;

if (!post) {
  throw new Error(`Post not found for entryId: ${entryId}`);
}

const postData = {
  sys: post.sys, 
  fields: {
    title: post.fields.title,
    excerpt: post.fields.excerpt,
    publishDate: post.fields.publishDate,
    content: post.fields.content,
    featuredImage: post.fields.featuredImage,
    tags: post.fields.tags,
    slug: post.fields.slug,
  }
};

export async function getStaticPaths() {
  const entries = await client.getEntries({
    content_type: 'blogPost',
  });

  return entries.items.map(entry => ({
    params: { slug: entry.fields.slug },
  }));
}
---

<Layout title={postData.fields.title} description={postData.fields.excerpt}>
  <main class="page-content">
    <BlogDetail post={postData} client:only="react" />
  </main>
</Layout>