---
import Layout from "../../layouts/Layout.astro";
import { getBlogPostById, client } from '../../fetchBlogPostById';
import type { BlogPost } from 'types';
import '../../styles/blog.css';

const slug = Astro.params.slug as string;
const entries = await client.getEntries({
  content_type: 'blogPost',
  'fields.slug': slug,
  include: 10,
});

if (entries.items.length === 0) {
  throw new Error(`Post not found for slug: ${slug}`);
}

const entryId = entries.items[0].sys.id;
const post = await getBlogPostById(entryId) as unknown as BlogPost;

if (!post) {
  throw new Error(`Post not found for entryId: ${entryId}`);
}

export async function getStaticPaths() {
  const entries = await client.getEntries({
    content_type: 'blogPost',
  });

  return entries.items.map(entry => ({
    params: { slug: entry.fields.slug },
  }));
}

function renderContent(content: any) {
  return content.content.map((node: any) => {
    switch (node.nodeType) {
      case 'paragraph':
        return `<p class="paragraph">${node.content.map(renderText).join('')}</p>`;
      case 'heading-1':
        return `<h1>${node.content.map(renderText).join('')}</h1>`;
      case 'heading-2':
        return `<h4>${node.content.map(renderText).join('')}</h4>`;
      case 'embedded-asset-block':
        return renderEmbeddedAsset(node);
      default:
        return '';
    }
  }).join('');
}

function renderText(textNode: any) {
  if (textNode.marks && textNode.marks.length > 0) {
    return textNode.marks.map((mark: any) => {
      switch (mark.type) {
        case 'bold':
          return `<strong>${textNode.value}</strong>`;
        default:
          return textNode.value;
      }
    }).join('');
  }
  return textNode.value;
}

function renderEmbeddedAsset(node: any) {
  const { metadata, sys, fields } = node.data.target;
  const assetUrl = fields.file.url;
  const assetTitle = fields.title;

  return `<div class="embedded-asset">
            <img class="centered-image" src="${assetUrl}" alt="${assetTitle}" />
            <p>${assetTitle}</p>
          </div>`;
}
---


<Layout title={post.fields.title} description={post.fields.excerpt}>
  <main class="page-content">
    <h1 style="text-align: center;">{post.fields.title}</h1>
    <p style="font-size: 20px;">Publicado el: {new Date(post.fields.publishDate).toLocaleDateString()}</p>
    <p style="font-size: 20px;"> Última actualización: {new Date(post.sys.updatedAt).toLocaleDateString()}</p>
    <p style="font-size: 20px;">{post.fields.excerpt}</p>
    {post.fields.featuredImage && post.fields.featuredImage.length > 0 && (
      <img class="featured-image" src={post.fields.featuredImage[0].fields.file.url} alt={post.fields.title} />
    )}
    <div class="blog-content" set:html={renderContent(post.fields.content)}></div>
    <p>Tags: {post.fields.tags}</p>
    <div style="text-align: center;">
      <button class="styled-button">
        <a href="/blog">Volver al blog</a>
      </button>
  </div>
  </main>
</Layout>